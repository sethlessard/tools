import React, { Component } from "react";
import PropTypes from "prop-types";
import styled from "styled-components";
import { connect } from "react-redux";

const Wrapper = styled.div``;

/**
 * Map the redux state to the $1 component's props.
 * @param {object} state the redux state.
 * @param {object} ownProps the props passed to the $1 component.
 * @returns {object} the mapped props.
 */
const mapStateToProps = (state, ownProps) => ({

});

/**
 * Map the dispatch events as props for the $1 component.
 */
const mapDispatchToProps = (dispatch) => ({

});

class $1 extends Component {

  /**
   * $1 constructor.
   * @param {object} props the props.
   */
  constructor(props) {
      super(props);
      this.state = {

      };
  }
  
  /**
   * Render the $1 component.
   */
  render() {
    const { children, style: compStyle } = this.props;
    const style = {
      $2: {

      }
    };
    Object.assign(style.$2, compStyle);
    return (
      <Wrapper style={style.$2}>{children}</Wrapper>
    );
  }
}

$1.propTypes = {
  children: PropTypes.node
};

export default connect(mapStateToProps, mapDispatchToProps)($1);
